name: Deploy

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: rust-webapp
            asset_name: rust-webapp-linux
          - os: windows-latest
            artifact_name: rust-webapp.exe
            asset_name: rust-webapp-windows.exe
          - os: macos-latest
            artifact_name: rust-webapp
            asset_name: rust-webapp-macos
    
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Build
        run: cargo build --release
      
      - name: Rename binary
        shell: bash
        run: |
          cd target/release
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv rust-webapp.exe ${{ matrix.asset_name }}
          else
            mv rust-webapp ${{ matrix.asset_name }}
          fi
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/${{ matrix.asset_name }}

  deploy-production:
    needs: [create-release, build-release]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://quizmo.me
    concurrency: production
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /opt/rust-webapp
            git pull
            docker compose pull
            docker compose up -d --force-recreate
